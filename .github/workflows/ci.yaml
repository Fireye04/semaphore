name: CI

"on": [push]

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0 # full-depth clone for setuptools_scm

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"

      - name: Run pre-commit
        uses: pre-commit/action@v2.0.3

  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python:
          - "3.10"

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0 # full-depth clone for setuptools_scm

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python }}

      - name: Install tox
        run: pip install tox

      - name: Cache tox environments
        id: cache-tox
        uses: actions/cache@v2
        with:
          path: .tox
          # requirements/*.txt and tox.ini have versioning or dependency
          # information that would impact the tox environment.
          key: tox-${{ matrix.python }}-${{ hashFiles('requirements/*.txt') }}-${{ hashFiles('tox.ini') }}
          restore-keys: |
            tox-${{ matrix.python }}-${{ hashFiles('requirements/*.txt') }}-

      - name: Run tox
        run: tox -e py,coverage-report,typing

  build:
    runs-on: ubuntu-latest
    needs: [lint, test]

    # Only do Docker builds of ticket branches and tagged releases.
    if: startsWith(github.ref, 'refs/tags/') || startsWith(github.ref, 'refs/heads/tickets/')

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0 # full-depth clone for setuptools_scm

      - name: Define the Docker tag
        id: vars
        run: echo ::set-output name=tag::$(scripts/docker-tag.sh "$GITHUB_REF")

      - name: Print the tag
        id: print
        run: echo ${{steps.vars.outputs.tag}}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: sqreadmin
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: lsstsqre/semaphore:${{ steps.vars.outputs.tag }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
